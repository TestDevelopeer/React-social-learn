{"version":3,"sources":["components/Navbar/Navbar.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","redux/auth-reducer.js","components/Header/Header.module.css","redux/profile-reducer.js","assets/images/loader.svg","components/Common/Preloader/Preloader.js","redux/dialogs-reducer.js","utils/object-helpers.js","redux/users-reducer.js","api/api.js"],"names":["module","exports","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","activeLink","Header","props","header","src","alt","loginBlock","isAuth","login","onClick","logout","HeaderContainer","this","React","Component","connect","state","auth","INITIALIZED_SUCCESS","initialState","initialized","appReducer","action","type","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","usersPage","usersReducer","authReducer","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","UsersContainer","LoginPage","App","initializeApp","path","render","Preloader","AppContainer","withRouter","dispatch","promise","getAuthUserData","Promise","all","then","MainApp","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","SET_USER_DATA","userId","email","setAuthUserData","payload","a","authAPI","me","response","data","resultCode","id","password","rememberMe","messages","length","stopSubmit","_error","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_STATUS","posts","likesCount","profile","status","addPostActionCreator","newPostText","getUserProfile","usersAPI","getProfile","setStatus","getStatus","profileAPI","updateStatus","newPost","filter","p","postId","style","background","preloader","SEND_MESSAGE","dialogs","name","sendMessageCreator","newMessageBody","body","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","getUsers","page","totalCount","followUnfollowFlow","apiMethod","actionCreator","follow","bind","unfollow","followed","instance","axios","baseURL","withCredentials","headers","get","post","delete","warn","put"],"mappings":"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","file":"static/js/main.9454bf48.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3IjsN\",\"item\":\"Navbar_item__31vpL\",\"activeLink\":\"Navbar_activeLink__16vqg\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"#\">News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"#\">Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"#\">Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/8/85/Logo-Test.png\" alt=\"Logo\" />\r\n\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div> {props.login} <button onClick={props.logout}>Logout</button> </div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = '/react-social/auth/INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React, {Suspense} from \"react\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return (\r\n            <Suspense fallback={<div>Loading...</div>}>\r\n                <Component {...props} />\r\n            </Suspense>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {HashRouter, Route, withRouter} from 'react-router-dom';\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/Common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\nconst LoginPage = React.lazy(() => import('./components/Login/Login'));\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className=\"app-wrapper-content\">\r\n                    <Route path=\"/dialogs\" render={withSuspense(DialogsContainer)}/>\r\n                    <Route path=\"/profile/:userId?\" render={withSuspense(ProfileContainer)}/>\r\n                    <Route path=\"/users\" render={withSuspense(UsersContainer)}/>\r\n                    <Route path=\"/login\" render={withSuspense(LoginPage)}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n});\r\n\r\nconst AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst MainApp = (props) => {\r\n    return (\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <AppContainer />\r\n            </Provider>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default MainApp;","import './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainApp from \"./App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <MainApp/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = '/react-social/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}});\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__T2YGU\",\"loginBlock\":\"Header_loginBlock__Ksov9\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = '/react-social/auth/ADD_POST';\r\nconst DELETE_POST = '/react-social/auth/DELETE_POST';\r\nconst SET_USER_PROFILE = '/react-social/auth/SET_USER_PROFILE';\r\nconst SET_STATUS = '/react-social/auth/SET_STATUS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Test msg 1', likesCount: 5},\r\n        {id: 2, message: 'Test msg 2', likesCount: 6},\r\n        {id: 3, message: 'Test msg 3', likesCount: 7},\r\n        {id: 4, message: 'Test msg 4', likesCount: 8},\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (!response.data.resultCode) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport default profileReducer;","export default __webpack_public_path__ + \"static/media/loader.6f8e2689.svg\";","import preloader from \"../../../assets/images/loader.svg\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <div style={ {background: 'white'} }>\r\n            <img src={preloader} alt=\"Preloader\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Preloader;","const SEND_MESSAGE = '/react-social/auth/SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Test1' },\r\n        { id: 2, name: 'Test2' },\r\n        { id: 3, name: 'Test3' },\r\n        { id: 4, name: 'Test4' },\r\n    ], messages: [\r\n        { id: 1, message: 'Msg1' },\r\n        { id: 2, message: 'Msg2' },\r\n        { id: 3, message: 'Msg3' },\r\n        { id: 4, message: 'Msg4' },\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 11, message: body }]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\nexport default dialogsReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = '/react-social/auth/FOLLOW';\r\nconst UNFOLLOW = '/react-social/auth/UNFOLLOW';\r\nconst SET_USERS = '/react-social/auth/SET_USERS';\r\nconst SET_CURRENT_PAGE = '/react-social/auth/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = '/react-social/auth/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = '/react-social/auth/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = '/react-social/auth/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n               users:  updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users:  updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId});\r\nexport const getUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '9358a999-e675-463d-b4f6-2f8378a87dfa'\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please use profileAPI object.');\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status});\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout(email, password, rememberMe = false) {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n"],"sourceRoot":""}