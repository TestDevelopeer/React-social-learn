{"version":3,"sources":["components/Common/FormsControl/FormsControls.module.css","components/Common/FormsControl/FormsControls.js","utils/validators/validators.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","FormControl","input","meta","touched","error","children","hasError","className","s","formControl","Textarea","props","restProps","child","element","Input","createField","placeholder","name","validators","component","text","validate","required","value","maxLengthCreator","maxLength","length","DialogItem","path","id","dialog","active","to","Message","message","maxLength50","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messageElements","messages","m","isAuth","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"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","file":"static/js/6.cea080ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__6efFe\",\"error\":\"FormsControls_error__3hA7X\",\"formSummaryError\":\"FormsControls_formSummaryError__2aNir\"};","import React from \"react\";\r\nimport s from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={`${s.formControl} ${hasError ? s.error : \"\"}`}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, element, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} {...restProps} />\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, element, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps} />\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => (\r\n    <div>\r\n        <Field\r\n            placeholder={placeholder}\r\n            name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props}\r\n        />\r\n        {text}\r\n    </div>\r\n);","export const required = value => {\r\n    if(value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__35SPY\",\"dialogsItems\":\"Dialogs_dialogsItems__3eWd4\",\"active\":\"Dialogs_active__2ibPe\",\"messages\":\"Dialogs_messages__1K-zK\",\"message\":\"Dialogs_message__3fwWg\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = `/dialogs/${props.id}`;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Textarea} from \"../../Common/FormsControl/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nlet maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength50]} name=\"newMessageBody\" placeholder=\"Enter your message\"/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs\r\n        .map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\r\n    let messageElements = state.messages\r\n        .map(m => <Message key={m.id} message={m.message}/>);\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n    if (!props.isAuth) {\r\n        return <Redirect to='/login'/>\r\n    }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messageElements}</div>\r\n                <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}