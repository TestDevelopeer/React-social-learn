{"version":3,"sources":["components/Common/FormsControl/FormsControls.module.css","components/Common/FormsControl/FormsControls.js","utils/validators/validators.js","components/Login/Login.jsx"],"names":["module","exports","FormControl","input","meta","touched","error","children","hasError","className","s","formControl","Textarea","props","restProps","child","element","Input","createField","placeholder","name","validators","component","text","validate","required","value","maxLengthCreator","maxLength","length","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","type","autoComplete","formSummaryError","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,oMCGrHC,EAAc,SAAC,GAA8C,EAA7CC,MAA8C,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAQC,EAAc,EAAdA,SAC3CC,EAAWH,GAAWC,EAC5B,OACI,sBAAKG,UAAS,UAAKC,IAAEC,YAAP,YAAsBH,EAAWE,IAAEJ,MAAQ,IAAzD,UACI,8BACKC,IAEJC,GAAY,+BAAOF,QAKnBM,EAAW,SAACC,GAAW,IACzBV,EAA6CU,EAA7CV,MAAgCW,GAAaD,EAAtCT,KAAsCS,EAAhCE,MAAgCF,EAAzBG,QADI,YACqBH,EADrB,qCAE/B,OACI,cAACX,EAAD,2BAAiBW,GAAjB,aACI,oDAAcV,GAAWW,QAKxBG,EAAQ,SAACJ,GAAW,IACtBV,EAA6CU,EAA7CV,MAAgCW,GAAaD,EAAtCT,KAAsCS,EAAhCE,MAAgCF,EAAzBG,QADC,YACwBH,EADxB,qCAE5B,OACI,cAACX,EAAD,2BAAiBW,GAAjB,aACI,iDAAWV,GAAWW,QAKrBI,EAAc,SAACC,EAAaC,EAAMC,EAAYC,GAAhC,IAA2CT,EAA3C,uDAAmD,GAAIU,EAAvD,uDAA8D,GAA9D,OACvB,gCACI,cAAC,IAAD,aACIJ,YAAaA,EACbC,KAAMA,EACNI,SAAUH,EACVC,UAAWA,GACPT,IAEPU,O,iCC3CT,oEAAO,IAAME,EAAW,SAAAC,GACpB,IAAGA,EACH,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAGA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,8HCsB3BE,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EAnBL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAc3B,EAAW,EAAXA,MAC9B,OACI,uBAAM4B,SAAUD,EAAhB,UACKf,YAAY,QAAS,QAAS,CAACO,KAAWR,IAAO,CAACkB,KAAM,QAASC,aAAc,OAC/ElB,YAAY,WAAY,WAAY,CAACO,KAAWR,IAAO,CAACkB,KAAM,WAAYC,aAAc,OACxFlB,YAAY,KAAM,aAAc,KAAMD,IAAO,CAACkB,KAAM,YAAa,eAE9D7B,GACI,qBAAKG,UAAWC,IAAE2B,iBAAlB,SACK/B,IAGb,8BACI,mDA2BDgC,uBAJS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAGiB,CAACE,WAA1BJ,EAnBD,SAACzB,GAIX,OAAGA,EAAM2B,OACE,cAAC,IAAD,CAAUG,GAAI,aAGrB,gCACI,uCACA,cAACb,EAAD,CAAgBI,SATP,SAACU,GACd/B,EAAM6B,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.c23c675d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__6efFe\",\"error\":\"FormsControls_error__3hA7X\",\"formSummaryError\":\"FormsControls_formSummaryError__2aNir\"};","import React from \"react\";\r\nimport s from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={`${s.formControl} ${hasError ? s.error : \"\"}`}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, element, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} {...restProps} />\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, element, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps} />\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => (\r\n    <div>\r\n        <Field\r\n            placeholder={placeholder}\r\n            name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props}\r\n        />\r\n        {text}\r\n    </div>\r\n);","export const required = value => {\r\n    if(value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../Common/FormsControl/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from \"../Common/FormsControl/FormsControls.module.css\";\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', [required], Input, {type: 'email', autoComplete: 'on'})}\r\n            {createField('Password', 'password', [required], Input, {type: 'password', autoComplete: 'on'})}\r\n            {createField(null, 'rememberMe', null, Input, {type: 'checkbox'}, 'remember me')}\r\n            {\r\n                error &&\r\n                    <div className={s.formSummaryError}>\r\n                        {error}\r\n                    </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n    if(props.isAuth){\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);"],"sourceRoot":""}